#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require

#include "RT_genData.h"

const vec3 sphereCenter = vec3(2.0, 2.0, 2.0);
const float sphereRadius = 1.0f;

hitAttributeEXT vec3 attribs;

void main() {
    vec3 rayO = gl_WorldRayOriginEXT;
    vec3 rayD = gl_WorldRayDirectionEXT;

    vec3 oc = rayO - sphereCenter;
    float b = dot(oc, rayD);
    float c = dot(oc, oc) - sphereRadius * sphereRadius;
    float discriminant = b * b - c;

    vec3 hitPosition ;

    //max ( sign ( x - y ) , 0.0 )

    if (discriminant > 0.0) {
        float t = -b - sqrt(discriminant);
        if (t > 0.0){ // Report intersection
            attribs = rayO + t * rayD ;

            reportIntersectionEXT(t, 0); // invoke a closesthit shader on the ray
        }
    }
}
